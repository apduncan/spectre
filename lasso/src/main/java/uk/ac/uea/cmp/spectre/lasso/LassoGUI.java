/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.ac.uea.cmp.spectre.lasso;

import org.apache.log4j.Logger;
import uk.ac.uea.cmp.spectre.core.ui.gui.JobController;
import uk.ac.uea.cmp.spectre.core.ui.gui.StatusTracker;
import uk.ac.uea.cmp.spectre.core.ui.gui.ToolHost;
import uk.ac.uea.cmp.spectre.lasso.rooted.RootedLassoGUIPanel;
import uk.ac.uea.cmp.spectre.lasso.rooted.RootedLassoOptions;
import uk.ac.uea.cmp.spectre.lasso.quartet.QuartetLassoGUIPanel;
import uk.ac.uea.cmp.spectre.lasso.unrooted.UnrootedLassoGUIPanel;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.io.File;
import java.net.URISyntaxException;
import java.util.stream.Stream;

/**
 *
 * @author Anthony Duncan
 */
public class LassoGUI extends javax.swing.JFrame implements ToolHost {
    private LassoToolTab activeTab;
    private JobController go_control;
    private File lastInput;
    private File lastOutput;
    private boolean running;
    private Component[] inputComponents;
    private static Logger log = Logger.getLogger(LassoGUI.class.getName());
    /**
     * Creates new form RootedLassoGUI
     */
    public LassoGUI() {
        initComponents();
        addTabs();
        initTooltips();
        try {
            setIconImage((new ImageIcon(uk.ac.uea.cmp.spectre.core.ui.gui.LookAndFeel.getLogoFilePath()).getImage()));
        } catch (URISyntaxException e) {
            log.debug("Could not load logo");
        }
        setTitle("RootedLasso");
        setRunningStatus(false);
        this.inputComponents = new Component[]{btnOutput, btnInput, btnExecute, txtInput, txtOutput, tabTools};
        this.lastInput = null;
        this.lastOutput = null;
    }
    
    private void addTabs() {
        RootedLassoGUIPanel equi = new RootedLassoGUIPanel();
        UnrootedLassoGUIPanel unroot = new UnrootedLassoGUIPanel();
        QuartetLassoGUIPanel quartet = new QuartetLassoGUIPanel();
        tabTools.addTab(equi.tabTitle(), equi);
        tabTools.addTab(unroot.tabTitle(), unroot);
        tabTools.addTab(quartet.tabTitle(), quartet);
        this.activeTab = (LassoToolTab)tabTools.getSelectedComponent();
        tabTools.addChangeListener(e -> {
            this.activeTab = (LassoToolTab)tabTools.getSelectedComponent();
        });
    }

    private void initTooltips() {
        txtInput.setToolTipText(RootedLassoOptions.DESC_INPUT);
        txtOutput.setToolTipText(RootedLassoOptions.DESC_OUTPUT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInputOutput = new javax.swing.JPanel();
        lblInput = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        lblOutput = new javax.swing.JLabel();
        txtOutput = new javax.swing.JTextField();
        btnInput = new javax.swing.JButton();
        btnOutput = new javax.swing.JButton();
        tabTools = new javax.swing.JTabbedPane();
        prgProgress = new javax.swing.JProgressBar();
        btnExecute = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        pnlInputOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Input/Output"));

        lblInput.setText("Input");

        lblOutput.setText("Output");

        btnInput.setText("...");
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });

        btnOutput.setText("...");
        btnOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInputOutputLayout = new javax.swing.GroupLayout(pnlInputOutput);
        pnlInputOutput.setLayout(pnlInputOutputLayout);
        pnlInputOutputLayout.setHorizontalGroup(
            pnlInputOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputOutputLayout.createSequentialGroup()
                        .addComponent(lblOutput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtOutput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOutput))
                    .addGroup(pnlInputOutputLayout.createSequentialGroup()
                        .addComponent(lblInput)
                        .addGap(18, 18, 18)
                        .addComponent(txtInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInput)))
                .addContainerGap())
        );
        pnlInputOutputLayout.setVerticalGroup(
            pnlInputOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInput)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInputOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOutput)
                    .addComponent(txtOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOutput))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabTools.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        btnExecute.setText("Execute");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        lblStatus.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabTools, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlInputOutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prgProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExecute)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInputOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabTools, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prgProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExecute)
                    .addComponent(lblStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {
        final JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Input matrix");
        fc.setFileSelectionMode(JFileChooser.OPEN_DIALOG);
        if(this.lastInput != null) {
            if (this.lastInput.getParentFile().isDirectory() && this.lastInput.getParentFile().exists())
                fc.setCurrentDirectory(this.lastInput.getParentFile());
        }
        if (evt.getSource() == btnInput) {
            int returnVal = fc.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                this.lastInput = file;
                String z = file.getAbsolutePath();
                txtInput.setText(z);
            } else {
                log.debug("Open command cancelled by user.");
            }
        }
    }

    private void btnOutputActionPerformed(java.awt.event.ActionEvent evt) {
        final JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Output");
        fc.addChoosableFileFilter(new FileNameExtensionFilter("Nexus", "nex"));
        if(this.lastOutput != null) {
            if (this.lastOutput.getParentFile().isDirectory() && this.lastOutput.getParentFile().exists())
                fc.setCurrentDirectory(this.lastOutput.getParentFile());
        }
        if (evt.getSource() == btnOutput) {
            int returnVal = fc.showSaveDialog(LassoGUI.this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                this.lastOutput = file;
                String z = file.getAbsolutePath();
                txtOutput.setText(z);
            } else {
                log.debug("Open command cancelled by user.");
            }
        }
    }

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {
        // Validate arguments
        File input = new File(txtInput.getText());
        if(!input.exists()) {
            showErrorDialog("Could not find input file");
            return;
        }
        File output = new File(txtOutput.getText());
        //Pass these arguments in to whatever tool tab is currently selected
        this.activeTab.runTool(input, output, this, new StatusTracker(prgProgress, lblStatus));
    }

    @Override
    public void update() {

    }

    @Override
    public void setRunningStatus(boolean running) {
        if(running != this.running) {
            this.running = running;
            //disable / enable all input components
            Component[] components = {btnExecute, btnInput, btnOutput, tabTools};
            Stream.of(components).forEach(c -> c.setEnabled(!this.running));
        }
    }

    @Override
    public void showErrorDialog(String message) {
        JOptionPane.showMessageDialog(this,
                message,
                "RootedLasso Error",
                JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LassoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LassoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LassoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LassoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LassoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExecute;
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnOutput;
    private javax.swing.JLabel lblInput;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel pnlInputOutput;
    private javax.swing.JProgressBar prgProgress;
    private javax.swing.JTabbedPane tabTools;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextField txtOutput;
    // End of variables declaration//GEN-END:variables
}
