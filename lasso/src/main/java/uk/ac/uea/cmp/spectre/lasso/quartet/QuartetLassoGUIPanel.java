/*
 *  Suite of PhylogEnetiC Tools for Reticulate Evolution (SPECTRE)
 *  Copyright (C) 2017  UEA School of Computing Sciences
 *
 *  This program is free software: you can redistribute it and/or modify it under the term of the GNU General Public
 *  License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
 *  later version.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 *  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with this program.  If not, see
 *  <http://www.gnu.org/licenses/>.
 */

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.ac.uea.cmp.spectre.lasso.quartet;

import uk.ac.uea.cmp.spectre.core.ui.gui.StatusTracker;
import uk.ac.uea.cmp.spectre.core.ui.gui.ToolHost;
import uk.ac.uea.cmp.spectre.lasso.LassoToolTab;
import uk.ac.uea.cmp.spectre.lasso.unrooted.UnrootedLassoOptions;

import java.awt.*;
import java.io.File;
import java.util.stream.Stream;

/**
 *
 * @author Anthony Duncan
 */
public class QuartetLassoGUIPanel extends javax.swing.JPanel implements LassoToolTab {

    /**
     * Creates new form QuartetLassoGUIPanel
     */
    public QuartetLassoGUIPanel() {
        initComponents();
        initTooltips();
        this.inputComponents = new Component[] {chkWeighted};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlOptions = new javax.swing.JPanel();
        chkWeighted = new javax.swing.JCheckBox();

        pnlOptions.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        chkWeighted.setText("Weighted Quartets");

        javax.swing.GroupLayout pnlOptionsLayout = new javax.swing.GroupLayout(pnlOptions);
        pnlOptions.setLayout(pnlOptionsLayout);
        pnlOptionsLayout.setHorizontalGroup(
            pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkWeighted)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        pnlOptionsLayout.setVerticalGroup(
            pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkWeighted)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkWeighted;
    private javax.swing.JPanel pnlOptions;
    // End of variables declaration//GEN-END:variables
    private Component[] inputComponents;

    private void initTooltips() {
        chkWeighted.setToolTipText(QuartetLassoOptions.DESC_WEIGHTED);
    }

    @Override
    public String tabTitle() {
        return "Quartet";
    }

    @Override
    public void runTool(File input, File output, ToolHost host, StatusTracker tracker) {
        //Get additional arguments used for outputting quartets
        boolean weighted = chkWeighted.isSelected();
        QuartetLassoOptions options = new QuartetLassoOptions();
        options.setInput(input);
        options.setOutput(output);
        options.setWeighted(weighted);
        new QuartetLassoRunner(host).runLasso(options, tracker);
    }

    @Override
    public void setRunning(final boolean running) {
        Stream.of(this.inputComponents).forEach(c -> c.setEnabled(running));
    }
}
